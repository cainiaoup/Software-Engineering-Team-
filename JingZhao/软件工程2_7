###  2.7 回溯与debug
历经千辛万苦终于将巡检机器人试运行了，但是整个前期开发过程中却出现了很多的问题，原本计划的是整个过程采用敏捷方式进行管理，将整个机器人拆分成不同的需求部分来进行不断的迭代开发，然后根据实际运行结果来进行随机应变增改需求，可是实际面临的变数远超最开始的想象。
* 对软件结构设计得不够灵活：由于开发人员并不多，最开始大家都是集中在一个大工程进行开发，每个人负责一部分功能，开发后进行整合，但是最后下来却发现由于为了赶时间，许多代码仅仅是为了实现相关功能，基本没有复用性，整个工程的耦合性较强，一旦发生了需求的变更与修改，将是一个巨大的工程，一个的变更就会牵扯到一大堆模块的适应性修改，浪费了许多时间。
* 对整个工程的把握不到位：每个人都有一个单独的代码风格，虽然每个人独立的完成了自己的模块，但是开发人员之间的工作却没有可替代性，没有对整个软件的开发规范制定一个统一的标准，工作之间相互很难看懂对方的代码，由于没有及时留存项目文档，工作的交接基本靠口传心授，因此对中间涉及到人员变动时工作交接造成了极大的不便，甚至还会有已经离开项目组的工程师被叫回来重新指导新的成员进行工作。
* 没有及时进行版本管控：虽然前期开发阶段并没有显现出太多问题，但是一旦到了后期的测试以及需求变更时麻烦就接连而至，版本管控的不及时导致新的需求到来时经常使得机器处于停工状态，旧的功能实现都遭受了影响，并且很难还原到之前的工作状态，还要对先前已经测试过的问题重新进行再一次的测试，现场实施人员叫苦不堪。
* 供应商选择的不可靠：由于整个机器人各个零部件是由不同的供应商进行提供，就算同一个零部件也出现了不同的供应商都只能满足一部分需求的情况，完美的零部件要么不存在要么超出预算，然而这是先前进行调研过程中所疏忽的。
* 现场实施过程中的各种麻烦：机器人在现场实际应用时，对当地原有的生产生活环境造成了影响，甚至有些测试导致的事故造成了一定的损失，使得测试不得已而暂停，对受损设备和零部件进行更换维修。

